<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security
          	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Configure Spring-Security -->
	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="authenticationEntryPoint">
		<security:intercept-url pattern="/admin/login"
			access="permitAll" />
		<security:intercept-url pattern="/productadmin*"
			access="hasRole('ROLE_ADMIN')" />
		<security:logout invalidate-session="true"
			logout-success-url="/admin/login" />
		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />
	</security:http>

	<!-- Custom filter for username and password. The real customization is 
		done in the customAthenticationManager -->
	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="customAuthenticationManager"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />

	<!-- Custom authentication manager. In order to authenticate, username and 
		password must not be the same -->
	<bean id="customAuthenticationManager" class="sportsstore.auth.CustomAuthenticationManager" />

	<!-- We just actually need to set the default failure url here -->
	<bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/admin/loginfailed" />

	<!-- We just actually need to set the default target url here -->
	<bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
		p:defaultTargetUrl="/productadmin" />

	<!-- The AuthenticationEntryPoint is responsible for redirecting the user 
		to a particular page, like a login page, whenever the server sends back a 
		response requiring authentication -->
	<!-- See Spring-Security Reference 5.4.1 for more info -->
	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/admin/login" />

	<security:authentication-manager />

</beans>