<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:device="http://www.springframework.org/schema/mobile/device"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/mobile/device
			http://www.springframework.org/schema/mobile/device/spring-mobile-device-1.0.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<mvc:view-controller path="/" view-name="home" />

	<!-- Activates various annotations to be detected in bean classes -->

	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->

	<context:component-scan base-package="sportsstore" />

	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->

	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
			<bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
		<bean id="themeChangeInterceptor"
			class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
			<property name="paramName" value="theme" />
		</bean>
		<!-- On pre-handle, resolve the device that originated the web request -->
		<bean
			class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
		<!-- On pre-handle, manage the user's site preference (declare after DeviceResolverHandlerInterceptor) -->
		<bean
			class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />
	</mvc:interceptors>

	<task:annotation-driven />

	<!-- Load Hibernate related configuration -->

	<import resource="hibernate-context.xml" />

	<!-- Import security configuration -->

	<import resource="security-context.xml" />
	
	<import resource="app-cfg.xml" />

	<!-- Import Tiles-related configuration -->

	<import resource="tiles-context.xml" />

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>

</beans>